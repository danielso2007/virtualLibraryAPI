<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath />  <!-- lookup parent from repository -->
	</parent>
	<groupId>br.com.virtuallibrary</groupId>
	<artifactId>virtuallibraryapi</artifactId>
	<version>0.6.0</version>
	<name>virtualLibraryAPI</name>
	<description>Study of Java REST and Spring Boot projects.</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>

		<api-docs-enabled>false</api-docs-enabled>
		<swagger-ui-enabled>false</swagger-ui-enabled>

		<profile-spring>dev</profile-spring>
		<spring.profiles.active>dev</spring.profiles.active>

		<skip-tests>true</skip-tests>
		<test.suites>**/SuiteTest</test.suites>

		<port>8080</port>

		<debug.properties>false</debug.properties>
		<trace.properties>false</trace.properties>

		<mongodb.host>localhost</mongodb.host>
		<mongodb.port>27017</mongodb.port>
		<mongodb.database>virtuallibraryapi</mongodb.database>
		<mongodb.username>root</mongodb.username>
		<mongodb.password>112358</mongodb.password>

		<docker.networks>vlapi</docker.networks>
		<docker.data.base.name>mongodb</docker.data.base.name>

		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<jacoco.utReportFolder>${project.build.directory}/jacoco/test</jacoco.utReportFolder>
		<jacoco.utReportFile>${jacoco.utReportFolder}/test.exec</jacoco.utReportFile>
		<junit.utReportFolder>${project.testresult.directory}/test</junit.utReportFolder>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.commons.rest.api</groupId>
			<artifactId>commons-rest-api</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- Removendo o Tomcat para usar o Undertow -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Undertow é um servidor Web de desempenho flexível, escrito em java -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.undertow</groupId>
					<artifactId>undertow-websockets-jsr</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>

		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>6.1.5.Final</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
			<version>2.3.0.RELEASE</version><!--$NO-MVN-MAN-VER$ -->
		</dependency>

		<!-- OpenAPI 3 -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-webmvc-core</artifactId>
			<version>1.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>1.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-security</artifactId>
			<version>1.3.9</version>
		</dependency>

		<!-- spring security -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- spring security test -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Dependencias adicionadas devido ao Java 11 -->
		<dependency>
			<groupId>org.jboss.xnio</groupId>
			<artifactId>xnio-nio</artifactId>
			<version>3.8.1.Final</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.threads</groupId>
			<artifactId>jboss-threads</artifactId>
			<version>3.1.1.Final</version>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<directory>${basedir}/target</directory>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${java.version}</release>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
					<reportsDirectory>${junit.utReportFolder}</reportsDirectory>
					<skipTests>${skip-tests}</skipTests>
					<workingDirectory>${project.build.directory}</workingDirectory>
					<trimStackTrace>false</trimStackTrace>
					<forkCount>5</forkCount>
					<threadCount>5</threadCount>
					<reuseForks>false</reuseForks>
					<parallel>classes</parallel>
					<perCoreThreadCount>true</perCoreThreadCount>
					<useUnlimitedThreads>false</useUnlimitedThreads>
					<includes>
						<include>${test.suites}</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.utReportFile}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.utReportFile}</dataFile>
							<outputDirectory>${jacoco.utReportFolder}</outputDirectory>
							<excludes>
								<exclude>**/*VirtualLibraryApiApplication.*</exclude>
								<exclude>br/com/virtuallibrary/commons/**/*</exclude>
							</excludes>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit implementation="org.jacoco.report.check.Limit">
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.85</minimum>
										</limit>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.65</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<!-- Due to spring-boot repackage, without adding this property test 
						classes are not found See https://github.com/spring-projects/spring-boot/issues/6254 -->
					<classesDirectory>${project.build.outputDirectory}</classesDirectory>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
					<reportsDirectory>${junit.itReportFolder}</reportsDirectory>
					<includes>
						<include>**/*IT*</include>
						<include>**/*IntTest*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version><!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<delimiters>
						<delimiter>@</delimiter>
					</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/docker</directory>
									<filtering>true</filtering>
								</resource>
								<resource>
									<directory>src/main/script</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-maven-plugin</artifactId>
				<version>0.3</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<apiDocsUrl>http://localhost:8080/v3/api-docs</apiDocsUrl>
					<outputFileName>openapi.json</outputFileName>
					<outputDir>${project.build.directory}</outputDir>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0.0</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>sonar-project.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<mongodb.host>${docker.data.base.name}</mongodb.host>
				<mongodb.port>27017</mongodb.port>
				<mongodb.database>virtuallibraryapi</mongodb.database>
				<mongodb.username>root</mongodb.username>
				<mongodb.password>112358</mongodb.password>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.13</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<contextDirectory>${project.build.directory}</contextDirectory>
							<repository>${project.artifactId}</repository>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>test</spring.profiles.active>
				<mongodb.host>localhost</mongodb.host>
				<mongodb.port>27017</mongodb.port>
				<mongodb.database>virtuallibraryapihomolog</mongodb.database>
				<mongodb.username>root</mongodb.username>
				<mongodb.password>112358</mongodb.password>
				<skip-tests>false</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<api-docs-enabled>true</api-docs-enabled>
				<swagger-ui-enabled>true</swagger-ui-enabled>
				<spring.profiles.active>dev</spring.profiles.active>
				<skip-tests>true</skip-tests>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<debug.properties>false</debug.properties>
				<trace.properties>false</trace.properties>
				<spring.profiles.active>prod</spring.profiles.active>
				<mongodb.host>localhost</mongodb.host>
				<mongodb.port>27017</mongodb.port>
				<mongodb.database>virtuallibraryapi</mongodb.database>
				<mongodb.username>root</mongodb.username>
				<mongodb.password>112358</mongodb.password>
			</properties>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<developers>
		<developer>
			<id>danielso2007</id>
			<name>Daniel Oliveira</name>
			<email>danielso2007@gmail.com</email>
			<organization>Em casa</organization>
			<roles>
				<role>Project Lead</role>
			</roles>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
			<comments>
				Copyright 2017-2019 the original author or authors.

				Licensed under the Apache License, Version 2.0 (the "License");
				you may not use this file except in compliance with the License.
				You may obtain a copy of the License at

				https://www.apache.org/licenses/LICENSE-2.0

				Unless required by applicable law or agreed to in writing, software
				distributed under the License is distributed on an "AS IS" BASIS,
				WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
				implied.
				See the License for the specific language governing permissions and
				limitations under the License.
			</comments>
		</license>
	</licenses>

</project>
